[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea6.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea6.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (Oracle Corporation Java 14.0.2)
[debug]       Load.loadUnit: plugins took 129.4945ms
[debug]       Load.loadUnit: defsScala took 0.2609ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.1278 ms
[debug]           Load.resolveProject(global-plugins) took 45.7995ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 118.6802ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 153.1322ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2978ms
[debug]     Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 292.4121ms
[debug]   Load.apply: load took 2160.7754ms
[debug]   Load.apply: resolveProjects took 6.964ms
[debug]   Load.apply: finalTransforms took 73.6281ms
[debug]   Load.apply: config.delegates took 25.9213ms
[debug]   Load.apply: Def.make(settings)... took 854.8084ms
[debug]   Load.apply: structureIndex took 154.5254ms
[debug]   Load.apply: mkStreams took 3.5082ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5500.9985ms
[debug]           Load.loadUnit: plugins took 51.7879ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\user\Desktop\Akka_Backend\AkkaStream\project
[debug]             Load.loadUnit: mkEval took 7.3064ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\Desktop\Akka_Backend\AkkaStream\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4877 ms
[info] loading settings for project akkastream-build from idea6.sbt ...
[debug]               Load.resolveProject(akkastream-build) took 3.6188ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akkastream-build, base: C:\Users\user\Desktop\Akka_Backend\AkkaStream\project, plugins: List(<none>))) took 6.7402ms
[debug] [Loading] Done in C:\Users\user\Desktop\Akka_Backend\AkkaStream\project, returning: (akkastream-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 233.3356ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.7384ms
[debug]         Load.loadUnit(file:/C:/Users/user/Desktop/Akka_Backend/AkkaStream/project/, ...) took 293.9483ms
[debug]       Load.apply: load took 296.4114ms
[debug]       Load.apply: resolveProjects took 0.1254ms
[debug]       Load.apply: finalTransforms took 15.3858ms
[debug]       Load.apply: config.delegates took 0.4624ms
[debug]       Load.apply: Def.make(settings)... took 107.2303ms
[debug]       Load.apply: structureIndex took 45.5986ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\user\Desktop\Akka_Backend\AkkaStream\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 946.8512ms
[debug]     Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Users\user\Desktop\Akka_Backend\AkkaStream
[debug]       Load.loadUnit: mkEval took 0.411ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\Desktop\Akka_Backend\AkkaStream, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.6198 ms
[info] loading settings for project akkastream from build.sbt ...
[debug]         Load.resolveProject(akkastream) took 48.101ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akkastream, base: C:\Users\user\Desktop\Akka_Backend\AkkaStream, plugins: List(<none>))) took 53.388ms
[debug] [Loading] Done in C:\Users\user\Desktop\Akka_Backend\AkkaStream, returning: (akkastream)
[debug]     Load.loadUnit: loadedProjectsRaw took 262.9814ms
[debug]     Load.loadUnit: cleanEvalClasses took 40.7546ms
[debug]   Load.loadUnit(file:/C:/Users/user/Desktop/Akka_Backend/AkkaStream/, ...) took 1252.0111ms
[debug] Load.apply: load took 1256.2254ms
[debug] Load.apply: resolveProjects took 0.2732ms
[debug] Load.apply: finalTransforms took 51.595ms
[debug] Load.apply: config.delegates took 0.4072ms
[debug] Load.apply: Def.make(settings)... took 142.1501ms
[debug] Load.apply: structureIndex took 45.9393ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to AkkaStream (in build file:/C:/Users/user/Desktop/Akka_Backend/AkkaStream/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57046 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57046, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to AkkaStream (in build file:/C:/Users/user/Desktop/Akka_Backend/AkkaStream/)
[debug] > Exec(idea-shell, None, None)
